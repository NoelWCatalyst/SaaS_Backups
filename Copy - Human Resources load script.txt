///$tab Main
SET ThousandSep=',';
SET DecimalSep='.';
SET MoneyThousandSep=',';
SET MoneyDecimalSep='.';
SET MoneyFormat='£#,##0.00;-£#,##0.00';
SET TimeFormat='hh:mm:ss';
SET DateFormat='DD/MM/YYYY';
SET TimestampFormat='DD/MM/YYYY hh:mm:ss[.fff]';
SET FirstWeekDay=0;
SET BrokenWeeks=0;
SET ReferenceDay=4;
SET FirstMonthOfYear=1;
SET CollationLocale='en-GB';
SET CreateSearchIndexOnReload=1;
SET MonthNames='Jan;Feb;Mar;Apr;May;Jun;Jul;Aug;Sep;Oct;Nov;Dec';
SET LongMonthNames='January;February;March;April;May;June;July;August;September;October;November;December';
SET DayNames='Mon;Tue;Wed;Thu;Fri;Sat;Sun';
SET LongDayNames='Monday;Tuesday;Wednesday;Thursday;Friday;Saturday;Sunday';
SET NumericalAbbreviation='3:k;6:M;9:G;12:T;15:P;18:E;21:Z;24:Y;-3:m;-6:μ;-9:n;-12:p;-15:f;-18:a;-21:z;-24:y';

LET vLib = 'HR Demo';
///$tab MAPS
// MAP_EmployeeID_To_Status:
// MAPPING
// LOAD
//     "Churn Employee ID",
//     if("Churn Employee Status_Current"<=0.8,'At Risk','No Risk')
// FROM [lib://Shared Build Space:DataFiles/StaffChurn_Prediction.qvd]
// (qvd);


///$tab Data
EMPLOYEE:
LOAD
    "Employee ID",
//     applymap('MAP_EmployeeID_To_Status',[Employee ID],'No Risk') as [Employee Churn Risk],
    "Employee Name",
    "Employee DoB",
    AGE(NOW(), "Employee DoB") 				AS [Employee Age],
    CLASS(AGE(NOW(), "Employee DoB"), 10) 	AS [Employee Age Band],
    "Office ID",
    "Employee Role",
    "Employee Job Title",
    "Employee Salary",
    "Employee Continuous Service",
    "Employee DBS Status",
    "Employee Next DBS Check Date",
    "Employee Manager ID",
    "Employee Gender",
    "Employee Home Lat",
    "Employee Home Lon",
    "Employee Rollover",
    '' as [Employee Homeworker]
FROM [lib://Shared Build Space:DataFiles/HR Data.xlsx]
(ooxml, embedded labels, table is Employee);

OFFICE:
LOAD
    "Office ID",
    "Office Name",
    "Office Lat",
    "Office Lon"
FROM [lib://Shared Build Space:DataFiles/HR Data.xlsx]
(ooxml, embedded labels, table is Office);

HOLIDAYS:
CROSSTABLE([Annual Leave Month], [Annual Leave Days], 1)
LOAD
    "Employee ID",
    January,
    February,
    March,
    April,
    May,
    June,
    July,
    August,
    September,
    October,
    November,
    December
FROM [lib://Shared Build Space:DataFiles/HR Data.xlsx]
(ooxml, embedded labels, table is [Annual Leave]);

HISTORIC:
CROSSTABLE([Historic Date], [Employee Count], 1)
LOAD
	*
FROM [lib://Shared Build Space:DataFiles/HR Data.xlsx]
(ooxml, embedded labels, table is [Historic Data]);

LEAVERS_PRE:
CROSSTABLE([Leavers Date], [Leaver Count], 1)
LOAD
	*
FROM [lib://Shared Build Space:DataFiles/HR Data.xlsx]
(ooxml, embedded labels, table is Leavers);

LEAVERS:
LOAD
	NUM#(TEXT(DATE(NUM#([Leavers Date]), 'YYYY'))) AS [Leavers Year],
    *
RESIDENT LEAVERS_PRE;
DROP TABLE LEAVERS_PRE;

TRAINING:
CROSSTABLE([Course], [Flag Completed Course], 1)
LOAD
 *
FROM [lib://Shared Build Space:DataFiles/HR Data.xlsx]
(ooxml, embedded labels, table is Training);

LEFT JOIN LOAD [Employee ID], [Employee Role] RESIDENT EMPLOYEE;

INNER JOIN

LOAD
    Course,
    "Type" AS [Employee Role],
    "Course Delivery",
    Mandatory
FROM [lib://Shared Build Space:DataFiles/HR Data.xlsx]
(ooxml, embedded labels, table is Courses);
DROP FIELD [Employee Role] FROM TRAINING;


SICKNESS:
LOAD
    "Employee ID",
    "Sickness Year",
    "Sickness Days Off"
FROM [lib://Shared Build Space:DataFiles/HR Data.xlsx]
(ooxml, embedded labels, table is Sickness);


ALRequests:
LOAD
    "Employee ID",
    "Annual Leave Start",
    "Annual Leave End",
    Status,
    '' as Comments,
    'https://democatalyst.eu.qlikcloud.com/api/v1/automations/ff024200-47b4-11ec-a577-bbfe32a1e224/actions/execute?X-Execution-Token=5npcVLSjIagiTMGMb6Da5xGxc26xHaPxVHVRJDTVssMsoMX9ixZ9bZrQBGYBJ8kz' as Notification
FROM [lib://Shared Build Space:DataFiles/AL.xlsx]
(ooxml, embedded labels, table is Sheet1);


///$tab Komment_1637148061085 Script
///Begining of Komment_1637148061085 Script (Object ID: e9cbe5e0-8943-4f1f-aa33-b88212ccb8c0)

    [Komment_1637148061085]:
    LOAD
      	null() AS [Employee ID],
    	null() AS [Komment_1637148061085.Employee Name],
	null() AS [Komment_1637148061085.Employee Job Title],
	null() AS [Komment_1637148061085.Employee Gender],
	null() AS [Komment_1637148061085.Employee DoB],
	null() AS [Komment_1637148061085.Employee Salary],
	null() AS [Komment_1637148061085.Employee Homeworker],
      null() as [Komment_1637148061085.CreatedAt],
      null() as [Komment_1637148061085.CreatedBy],
      null() as [Komment_1637148061085.__State]
    AutoGenerate 0;

    
    LIB CONNECT TO 'Kaptain';
    
    
    
    RestConnectorMasterTable:
    REPLACE
    SQL SELECT
        "Employee ID",
    	"Komment_1637148061085.Employee Name",
	"Komment_1637148061085.Employee Job Title",
	"Komment_1637148061085.Employee Gender",
	"Komment_1637148061085.Employee DoB",
	"Komment_1637148061085.Employee Salary",
	"Komment_1637148061085.Employee Homeworker",
        "Komment_1637148061085.CreatedAt",
        "Komment_1637148061085.CreatedBy",
        "Komment_1637148061085.__State"
    FROM JSON (wrap on) "root"
    WITH CONNECTION (
        URL "https://demo.catalysthost.cloud:8000/api/kapsule/6194e8c3e26fb23ac887e855/read",
        QUERY "markReloaded" "true"
    );

    [Komment_1637148061085]:
    REPLACE
    LOAD
        [Employee ID],
    	[Komment_1637148061085.Employee Name],
	[Komment_1637148061085.Employee Job Title],
	[Komment_1637148061085.Employee Gender],
	[Komment_1637148061085.Employee DoB],
	[Komment_1637148061085.Employee Salary],
	[Komment_1637148061085.Employee Homeworker],
        [Komment_1637148061085.CreatedAt],
        [Komment_1637148061085.CreatedBy],
        [Komment_1637148061085.__State]
    RESIDENT RestConnectorMasterTable;
    DROP TABLE RestConnectorMasterTable;
    

    IF IsPartialReload() AND len(vKomment)>0  THEN
      
    End IF

    Join ([EMPLOYEE])
    REPLACE
    LOAD
      'init' as [EMPLOYEE.__State]
    AutoGenerate 1;

    //Get all fields in Fact table
    LET vFactFieldNames = '';
    FOR i = 1 to NoOfFields('EMPLOYEE')

    IF LEN(vFactFieldNames) >0 THEN
      LET vFactFieldNames = '$(vFactFieldNames),[' & FieldName($(i),'EMPLOYEE') &']';
    ELSE
      LET vFactFieldNames = '[' & FieldName($(i),'EMPLOYEE') &']';
    ENDIF

    NEXT i

    //append aggregated writebacks into Fact table
    Join([EMPLOYEE])
    REPLACE
    LOAD
        FirstValue([Komment_1637148061085.Employee Name]) AS [Employee Name_Agg],
    FirstValue([Komment_1637148061085.Employee Job Title]) AS [Employee Job Title_Agg],
    FirstValue([Komment_1637148061085.Employee Gender]) AS [Employee Gender_Agg],
    FirstValue([Komment_1637148061085.Employee DoB]) AS [Employee DoB_Agg],
    FirstValue([Komment_1637148061085.Employee Salary]) AS [Employee Salary_Agg],
    FirstValue([Komment_1637148061085.Employee Homeworker]) AS [Employee Homeworker_Agg],
        MaxString([Komment_1637148061085.__State]) AS [EMPLOYEE.__State_Agg],
        [Employee ID]
    RESIDENT
        [Komment_1637148061085]
    GROUP BY
        [Employee ID]
    ORDER BY
        [Komment_1637148061085.CreatedAt] DESC
    ;

    [Tmp]:
    NoConcatenate
    Replace
    Load
       If(Not IsNull([Employee Name_Agg]), [Employee Name_Agg], [Employee Name]) as [Employee Name_Tmp],
   If(Not IsNull([Employee Job Title_Agg]), [Employee Job Title_Agg], [Employee Job Title]) as [Employee Job Title_Tmp],
   If(Not IsNull([Employee Gender_Agg]), [Employee Gender_Agg], [Employee Gender]) as [Employee Gender_Tmp],
   If(Not IsNull([Employee DoB_Agg]), [Employee DoB_Agg], [Employee DoB]) as [Employee DoB_Tmp],
   If(Not IsNull([Employee Salary_Agg]), [Employee Salary_Agg], [Employee Salary]) as [Employee Salary_Tmp],
   If(Not IsNull([Employee Homeworker_Agg]), [Employee Homeworker_Agg], [Employee Homeworker]) as [Employee Homeworker_Tmp],
      If(Not IsNull([EMPLOYEE.__State_Agg]), [EMPLOYEE.__State_Agg], [EMPLOYEE.__State]) as [EMPLOYEE.__State.Tmp],
      *
    Resident [EMPLOYEE];

    Drop Table [EMPLOYEE];

    //Generate field load for final fact table
    LET vFactFieldNames= Replace('$(vFactFieldNames)', '[Employee Name]', '[Employee Name_Tmp] as [Employee Name]');
LET vFactFieldNames= Replace('$(vFactFieldNames)', '[Employee Job Title]', '[Employee Job Title_Tmp] as [Employee Job Title]');
LET vFactFieldNames= Replace('$(vFactFieldNames)', '[Employee Gender]', '[Employee Gender_Tmp] as [Employee Gender]');
LET vFactFieldNames= Replace('$(vFactFieldNames)', '[Employee DoB]', '[Employee DoB_Tmp] as [Employee DoB]');
LET vFactFieldNames= Replace('$(vFactFieldNames)', '[Employee Salary]', '[Employee Salary_Tmp] as [Employee Salary]');
LET vFactFieldNames= Replace('$(vFactFieldNames)', '[Employee Homeworker]', '[Employee Homeworker_Tmp] as [Employee Homeworker]');
    LET vFactFieldNames= Replace('$(vFactFieldNames)', '[EMPLOYEE.__State]', '[EMPLOYEE.__State.Tmp] as [EMPLOYEE.__State]');

    [EMPLOYEE]:
    Replace
    Load
       $(vFactFieldNames)
    Resident [Tmp];

    Drop Table [Tmp];

    SET vKomment = '';
    ///End of Komment_1637148061085 Script (e9cbe5e0-8943-4f1f-aa33-b88212ccb8c0)
///$tab Komment_1637157499848 Script
///Begining of Komment_1637157499848 Script (Object ID: ZSk)

    [Komment_1637157499848]:
    LOAD
      null() AS [Employee ID],
    	null() AS [Komment_1637157499848.Annual Leave Start],
	null() AS [Komment_1637157499848.Annual Leave End],
	null() AS [Komment_1637157499848.Status],
	null() AS [Komment_1637157499848.Comments],
      null() as [Komment_1637157499848.CreatedAt],
      null() as [Komment_1637157499848.CreatedBy],
      null() as [Komment_1637157499848.__State]
    AutoGenerate 0;

    
    LIB CONNECT TO 'Kaptain';
    RestConnectorMasterTable:
    REPLACE
    SQL SELECT
        "Employee ID",
    	"Komment_1637157499848.Annual Leave Start",
	"Komment_1637157499848.Annual Leave End",
	"Komment_1637157499848.Status",
	"Komment_1637157499848.Comments",
        "Komment_1637157499848.CreatedAt",
        "Komment_1637157499848.CreatedBy",
        "Komment_1637157499848.__State"
    FROM JSON (wrap on) "root"
    WITH CONNECTION (
        URL "https://demo.catalysthost.cloud:8000/api/kapsule/61951731afbf31ba457535e1/read",
        QUERY "markReloaded" "true"
    );

    [Komment_1637157499848]:
    REPLACE
    LOAD
        [Employee ID],
    	[Komment_1637157499848.Annual Leave Start],
	[Komment_1637157499848.Annual Leave End],
	[Komment_1637157499848.Status],
	[Komment_1637157499848.Comments],
        [Komment_1637157499848.CreatedAt],
        [Komment_1637157499848.CreatedBy],
        [Komment_1637157499848.__State]
    RESIDENT RestConnectorMasterTable;
    DROP TABLE RestConnectorMasterTable;
    

    IF IsPartialReload() AND len(vKomment)>0  THEN
      
    End IF

    Join ([ALRequests])
    REPLACE
    LOAD
      'init' as [ALRequests.__State]
    AutoGenerate 1;

    //Get all fields in Fact table
    LET vFactFieldNames = '';
    FOR i = 1 to NoOfFields('ALRequests')

    IF LEN(vFactFieldNames) >0 THEN
      LET vFactFieldNames = '$(vFactFieldNames),[' & FieldName($(i),'ALRequests') &']';
    ELSE
      LET vFactFieldNames = '[' & FieldName($(i),'ALRequests') &']';
    ENDIF

    NEXT i

    //append aggregated writebacks into Fact table
    Join([ALRequests])
    REPLACE
    LOAD
        FirstValue([Komment_1637157499848.Annual Leave Start]) AS [Annual Leave Start_Agg],
    FirstValue([Komment_1637157499848.Annual Leave End]) AS [Annual Leave End_Agg],
    FirstValue([Komment_1637157499848.Status]) AS [Status_Agg],
    FirstValue([Komment_1637157499848.Comments]) AS [Comments_Agg],
        MaxString([Komment_1637157499848.__State]) AS [ALRequests.__State_Agg],
        [Employee ID]
    RESIDENT
        [Komment_1637157499848]
    GROUP BY
        [Employee ID]
    ORDER BY
        [Komment_1637157499848.CreatedAt] DESC
    ;

    [Tmp]:
    NoConcatenate
    Replace
    Load
       If(Not IsNull([Annual Leave Start_Agg]), [Annual Leave Start_Agg], [Annual Leave Start]) as [Annual Leave Start_Tmp],
   If(Not IsNull([Annual Leave End_Agg]), [Annual Leave End_Agg], [Annual Leave End]) as [Annual Leave End_Tmp],
   If(Not IsNull([Status_Agg]), [Status_Agg], [Status]) as [Status_Tmp],
   If(Not IsNull([Comments_Agg]), [Comments_Agg], [Comments]) as [Comments_Tmp],
      If(Not IsNull([ALRequests.__State_Agg]), [ALRequests.__State_Agg], [ALRequests.__State]) as [ALRequests.__State.Tmp],
      *
    Resident [ALRequests];

    Drop Table [ALRequests];

    //Generate field load for final fact table
    LET vFactFieldNames= Replace('$(vFactFieldNames)', '[Annual Leave Start]', '[Annual Leave Start_Tmp] as [Annual Leave Start]');
LET vFactFieldNames= Replace('$(vFactFieldNames)', '[Annual Leave End]', '[Annual Leave End_Tmp] as [Annual Leave End]');
LET vFactFieldNames= Replace('$(vFactFieldNames)', '[Status]', '[Status_Tmp] as [Status]');
LET vFactFieldNames= Replace('$(vFactFieldNames)', '[Comments]', '[Comments_Tmp] as [Comments]');
    LET vFactFieldNames= Replace('$(vFactFieldNames)', '[ALRequests.__State]', '[ALRequests.__State.Tmp] as [ALRequests.__State]');

    [ALRequests]:
    Replace
    Load
       $(vFactFieldNames)
    Resident [Tmp];

    Drop Table [Tmp];

    SET vKomment = '';
    ///End of Komment_1637157499848 Script (ZSk)
